// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: rooms.sql

package dbg

import (
	"context"
)

const getRooms = `-- name: GetRooms :many
select id from mud.rooms as rooms
`

func (q *Queries) GetRooms(ctx context.Context) ([]int64, error) {
	rows, err := q.query(ctx, q.getRoomsStmt, getRooms)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []int64
	for rows.Next() {
		var id int64
		if err := rows.Scan(&id); err != nil {
			return nil, err
		}
		items = append(items, id)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
